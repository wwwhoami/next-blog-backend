version: '3.9'

services:
  postgres:
    container_name: next-blog-postgres
    image: postgres:15.1
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT}:5432'
    networks:
      - default

  redis:
    container_name: next-blog-redis
    image: redis:7.0.6
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - '${REDIS_PORT}:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass $REDIS_PASSWORD
    volumes:
      - redis:/data
    networks:
      - default

  kafka:
    container_name: next-blog-kafka
    image: bitnami/kafka:3.4
    restart: always
    healthcheck:
      test: /opt/bitnami/kafka/bin/kafka-cluster.sh cluster-id --bootstrap-server ${KAFKA_HOST_INTERNAL}:${KAFKA_PORT_INTERNAL} || exit 1
      start_period: 10s
      interval: 5s
      timeout: 10s
      retries: 15
    ports:
      - '${KAFKA_PORT_EXTERNAL}:${KAFKA_PORT_EXTERNAL}'
    environment:
      - KAFKA_NODE_ID=${KAFKA_NODE_ID}
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:${KAFKA_PORT_INTERNAL},CONTROLLER://:9093,EXTERNAL://:${KAFKA_PORT_EXTERNAL}
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://${KAFKA_HOST_INTERNAL}:${KAFKA_PORT_INTERNAL},EXTERNAL://${KAFKA_HOST_EXTERNAL}:${KAFKA_PORT_EXTERNAL}
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=${KAFKA_NODE_ID}@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka:/bitnami/kafka
    networks:
      - default

  core-app:
    container_name: next-blog-core-app
    build:
      context: .
      dockerfile: ./apps/core-app/Dockerfile
      target: development
    image: next-blog-core-app:dev
    tty: true
    ports:
      - 3000:3000
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env.docker-compose
    networks:
      - default

volumes:
  postgres:
  kafka:
    driver: local
  redis:
    driver: local

networks:
  default:
    driver: bridge
