/* eslint-disable */
export default async () => {
    const t = {
        ["./user/entities/user.entity"]: await import("./user/entities/user.entity"),
        ["./category/dto/create-category.dto"]: await import("./category/dto/create-category.dto"),
        ["./category/entities/category.entity"]: await import("./category/entities/category.entity"),
        ["./post/entities/post.entity"]: await import("./post/entities/post.entity"),
        ["./user/entities/user-follower.entity"]: await import("./user/entities/user-follower.entity"),
        ["./auth/entities/user-access-token.entity"]: await import("./auth/entities/user-access-token.entity"),
        ["./auth/entities/access-token.entity"]: await import("./auth/entities/access-token.entity"),
        ["./comment/entities/comment.entity"]: await import("./comment/entities/comment.entity")
    };
    return { "@nestjs/swagger": { "models": [[import("./user/entities/user.entity"), { "UserEntity": { id: { required: true, type: () => String }, email: { required: true, type: () => String }, name: { required: true, type: () => String }, image: { required: true, type: () => String, nullable: true }, password: { required: true, type: () => String }, role: { required: true, type: () => Object } }, "UserNameImageEntity": {}, "UserNameImage": { user: { required: true, type: () => t["./user/entities/user.entity"].UserNameImageEntity } }, "UserNoIdEntity": {}, "UserNoPasswordEntity": {}, "UserNoIdPasswordEntity": {} }], [import("./user/entities/user-follower.entity"), { "UserFollower": { followerId: { required: true, type: () => String }, followingId: { required: true, type: () => String } } }], [import("./user/dto/create-user.dto"), { "CreateUserDto": { name: { required: true, type: () => String }, email: { required: true, type: () => String }, password: { required: true, type: () => String, minLength: 8, maxLength: 60 }, image: { required: false, type: () => String } } }], [import("./user/dto/get-user.dto"), { "GetUserDto": { id: { required: false, type: () => String }, name: { required: false, type: () => String }, email: { required: false, type: () => String } } }], [import("./user/dto/update-user.dto"), { "UpdateUserDto": { name: { required: false, type: () => String }, email: { required: false, type: () => String }, password: { required: false, type: () => String, minLength: 8, maxLength: 60 }, newPassword: { required: false, type: () => String, minLength: 8, maxLength: 60 }, image: { required: false, type: () => String } } }], [import("./auth/dto/auth-credentials.dto"), { "AuthCredentialsDto": { name: { required: false, type: () => String }, email: { required: false, type: () => String }, password: { required: true, type: () => String, minLength: 8, maxLength: 60 } } }], [import("./auth/entities/access-token.entity"), { "AccessTokenEntity": { accessToken: { required: true, type: () => String } } }], [import("./auth/entities/user-access-token.entity"), { "AuthenticatedUser": { accessToken: { required: true, type: () => String } } }], [import("../../../libs/shared/src/dto/get-notification.dto"), { "GetNotificationDto": { skip: { required: false, type: () => Number }, take: { required: false, type: () => Number }, isRead: { required: false, type: () => Boolean }, type: { required: false, type: () => Object } } }], [import("../../../libs/shared/src/entities/notification-message.entity"), { "NotificationMessage": { actor: { required: true, type: () => String }, target: { required: true, type: () => String }, data: { required: true } }, "CommentPayload": { id: { required: true, type: () => Number }, postId: { required: true, type: () => Number } }, "PostPayload": { id: { required: true, type: () => Number } } }], [import("../../../libs/shared/src/entities/notification.entity"), { "Notification": { id: { required: true, type: () => Number }, actor: { required: true, type: () => String }, target: { required: true, type: () => String }, data: { required: true }, isRead: { required: true, type: () => Boolean }, createdAt: { required: true, type: () => Date }, type: { required: true, type: () => Object } } }], [import("./category/dto/create-category.dto"), { "CreateCategoryDto": { name: { required: true, type: () => String }, description: { required: true, type: () => String }, hexColor: { required: false, type: () => String, nullable: true } }, "CreateCategoriesDto": { categories: { required: true, type: () => [t["./category/dto/create-category.dto"].CreateCategoryDto] } } }], [import("./post/dto/create-post.dto"), { "CreatePostDto": { title: { required: true, type: () => String }, excerpt: { required: true, type: () => String }, content: { required: true, type: () => String }, published: { required: true, type: () => Boolean }, coverImage: { required: true, type: () => String }, categories: { required: false, type: () => [t["./category/dto/create-category.dto"].CreateCategoryDto] } } }], [import("./category/entities/category.entity"), { "CategoryNoDescription": { name: { required: true, type: () => String }, hexColor: { required: true, type: () => String, nullable: true } }, "CategoryWithHotness": { name: { required: true, type: () => String }, description: { required: true, type: () => String }, hexColor: { required: true, type: () => String, nullable: true }, hotness: { required: true, type: () => Number } } }], [import("./post/entities/post.entity"), { "Slug": { slug: { required: true, type: () => String } }, "PostCategory": { category: { required: true, type: () => t["./category/entities/category.entity"].CategoryNoDescription } }, "PostEntity": { id: { required: true, type: () => Number }, title: { required: true, type: () => String }, content: { required: false, type: () => String }, coverImage: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, excerpt: { required: true, type: () => String }, slug: { required: true, type: () => String }, categories: { required: false, type: () => [t["./post/entities/post.entity"].PostCategory] }, likesCount: { required: true, type: () => Number } }, "PostLike": {} }], [import("./post/dto/get-post.dto"), { "GetPostDto": { take: { required: false, type: () => Number }, skip: { required: false, type: () => Number }, orderBy: { required: false, type: () => Object }, order: { required: false, type: () => Object }, content: { required: false, type: () => Boolean }, published: { required: false, type: () => Boolean }, searchTerm: { required: false, type: () => String }, category: { required: false, type: () => String }, authorId: { required: false, type: () => String } }, "GetPostPublicDto": {}, "SearchPostDto": { searchTerm: { required: true, type: () => String } }, "GetPostsByCategoriesDto": { category: { required: true, type: () => String } }, "SearchPostsByCategoriesDto": {} }], [import("./post/dto/update-post.dto"), { "UpdatePostDto": { title: { required: true, type: () => String }, excerpt: { required: true, type: () => String }, content: { required: true, type: () => String }, published: { required: true, type: () => Boolean }, coverImage: { required: true, type: () => String }, categories: { required: false, type: () => [t["./category/dto/create-category.dto"].CreateCategoryDto] } } }], [import("./comment/dto/create-comment.dto"), { "CreateCommentDto": { ancestorId: { required: false, type: () => Number }, postId: { required: true, type: () => Number }, content: { required: true, type: () => String } }, "CreateResponseToCommentDto": { ancestorId: { required: true, type: () => Number }, postId: { required: true, type: () => Number }, content: { required: true, type: () => String } } }], [import("./comment/dto/get-comment.dto"), { "GetCommentDto": { orderBy: { required: false, type: () => Object }, order: { required: false, type: () => Object }, depth: { required: false, type: () => Number } } }], [import("./comment/dto/update-comment.dto"), { "UpdateCommentDto": {} }], [import("./comment/entities/comment.entity"), { "CommentEntity": { id: { required: true, type: () => Number }, authorId: { required: true, type: () => String, nullable: true }, postId: { required: true, type: () => Number }, ancestorId: { required: true, type: () => Number, nullable: true }, content: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, isDeleted: { required: true, type: () => Boolean }, likesCount: { required: true, type: () => Number } }, "CommentLike": {}, "CommentEntityWithDepth": { depth: { required: true, type: () => Number } }, "CommentEntityWithChildrenCount": { childrenCount: { required: false, type: () => Number } }, "CommentEntityWithDescendants": { descendants: { required: false } } }], [import("./category/dto/update-category.dto"), { "UpdateCategoryDto": {} }], [import("./comment/dto/delete-comment.dto"), { "DeleteCommentDto": {} }], [import("./notification/dto/create-notification.dto"), { "CreateNotificationDto": {} }], [import("./notification/dto/update-notification.dto"), { "UpdateNotificationDto": {} }], [import("./notification/entities/notification.entity"), { "Notification": {} }]], "controllers": [[import("./user/user.controller"), { "UserController": { "get": { type: t["./user/entities/user.entity"].UserNoPasswordEntity }, "follow": { type: t["./user/entities/user-follower.entity"].UserFollower }, "unfollow": { type: t["./user/entities/user-follower.entity"].UserFollower }, "getFollowers": { type: [t["./user/entities/user.entity"].UserNoPasswordEntity] }, "getFollowing": { type: [t["./user/entities/user.entity"].UserNoPasswordEntity] } } }], [import("./auth/auth.controller"), { "AuthController": { "signUp": { type: t["./auth/entities/user-access-token.entity"].AuthenticatedUser }, "login": { type: t["./auth/entities/user-access-token.entity"].AuthenticatedUser }, "getProfile": { type: t["./user/entities/user.entity"].UserNoPasswordEntity }, "updateProfile": { type: t["./auth/entities/user-access-token.entity"].AuthenticatedUser }, "logout": {}, "refreshTokens": { type: t["./auth/entities/access-token.entity"].AccessTokenEntity } } }], [import("./notification/notification.controller"), { "NotificationController": { "getMany": {}, "markAsRead": {} } }], [import("./post/post.controller"), { "PostController": { "posts": { type: [t["./post/entities/post.entity"].PostEntity] }, "getOnePublishedBySlug": { type: t["./post/entities/post.entity"].PostEntity }, "getSlugsForPublished": { type: [t["./post/entities/post.entity"].Slug] }, "update": { type: t["./post/entities/post.entity"].PostEntity }, "create": { type: t["./post/entities/post.entity"].PostEntity }, "getLikes": { type: [t["./user/entities/user.entity"].UserNameImage] }, "like": { type: t["./post/entities/post.entity"].PostLike }, "unlike": { type: t["./post/entities/post.entity"].PostLike }, "delete": { type: t["./post/entities/post.entity"].PostEntity } } }], [import("./category/category.controller"), { "CategoryController": { "getMany": { type: Object }, "getCombinations": { type: [String] } } }], [import("./comment/comment.controller"), { "CommentController": { "create": { type: t["./comment/entities/comment.entity"].CommentEntity }, "getOne": { type: t["./comment/entities/comment.entity"].CommentEntity }, "getReplies": { type: [t["./comment/entities/comment.entity"].CommentEntityWithChildrenCount] }, "getForPost": { type: [t["./comment/entities/comment.entity"].CommentEntityWithChildrenCount] }, "getLikes": { type: [t["./user/entities/user.entity"].UserNameImage] }, "like": { type: t["./comment/entities/comment.entity"].CommentLike }, "unlike": { type: t["./comment/entities/comment.entity"].CommentLike }, "update": { type: t["./comment/entities/comment.entity"].CommentEntity }, "remove": { type: t["./comment/entities/comment.entity"].CommentEntity } } }]] } };
};